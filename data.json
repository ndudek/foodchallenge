{
  _mongooseOptions: {},
  mongooseCollection: NativeCollection {
  collection: Collection {
  s: [
    Object
  ]
},
opts: {bufferCommands: true, capped: false },
name: 'challenges',
collectionName: 'challenges',
conn: NativeConnection {
base: [Object],
collections: [Object],
models: [Object],
config: [Object],
replica: false,
hosts: null,
host: 'localhost',
port: 27017,
user: undefined,
pass: undefined,
name: 'foodchallenge',
options: [Object],
otherDbs: [],
_readyState: 1,
_closeCalled: false,
_hasOpened: true,
_listening: false,
db: [Object],
_events: [Object],
_eventsCount: 1
},
queue: [],
buffer: false,
emitter: EventEmitter {
domain: null,
_events: {
},
_eventsCount: 0,
_maxListeners: undefined}},
model:
{ [Function: model]
hooks: Kareem {_pres: {}, _posts: {
}
},
base: Mongoose {
connections: [Object],
plugins: [],
models: [Object],
modelSchemas: [Object],
options: [Object] },
modelName: 'Challenge',
model: [Function: model],
db: NativeConnection {
base: [Object],
collections: [Object],
models: [Object],
config: [Object],
replica: false,
hosts: null,
host: 'localhost',
port: 27017,
user: undefined,
pass: undefined,
name: 'foodchallenge',
options: [Object],
otherDbs: [],
_readyState: 1,
_closeCalled: false,
_hasOpened: true,
_listening: false,
db: [Object],
_events: [Object],
_eventsCount: 1
},
discriminators: undefined,
schema: Schema {
obj: [Object],
paths: [Object],
subpaths: {
},
virtuals: [Object],
singleNestedPaths: {
},
nested: {
},
inherits: {
},
callQueue: [Object],
_indexes: [],
methods: {
},
statics: {
},
tree: [Object],
query: {
},
childSchemas: [],
s: [Object],
options: [Object],
'$globalPluginsApplied': true
},
collection: NativeCollection {
collection: [Object],
opts: [Object],
name: 'challenges',
collectionName: 'challenges',
conn: [Object],
queue: [],
buffer: false,
emitter: [Object] },
Query: { [Function] base: [Object] },
'$__insertMany': [Function],
insertMany: [Function] },
schema: Schema {
obj: {name: [Function: String],
image: [Function: String],
description: [Function: String],
dos: [Function: String],
donts: [Function: String],
display: [Object],
multiplier: [Object],
duration: [Object] },
paths: {name: [Object],
image: [Object],
description: [Object],
dos: [Object],
donts: [Object],
display: [Object],
multiplier: [Object],
duration: [Object],
_id: [Object],
__v: [Object] },
subpaths: {},
virtuals: { id: [Object] },
singleNestedPaths: {},
nested: {},
inherits: {
},
callQueue: [[Object], [Object], [Object], [Object]],
_indexes: [],
methods: {
},
statics: {
},
tree: {
name: [Function: String],
image: [Function: String],
description: [Function: String],
dos: [Function: String],
donts: [Function: String],
display: [Object],
multiplier: [Object],
duration: [Object],
_id: [Object],
id: [Object],
__v: [Function: Number] },
query: {},
childSchemas: [],
s: {
hooks: [Object], kareemHooks: [Object] },
options: {retainKeyOrder: false,
typeKey: 'type',
id: true,
noVirtualId: false,
_id: true,
noId: false,
validateBeforeSave: true,
read: null,
shardKey: null,
autoIndex: null,
minimize: true,
discriminatorKey: '__t',
versionKey: '__v',
capped: false,
bufferCommands: true,
strict: true,
pluralization: true
},
'$globalPluginsApplied': true
},
op: 'find',
options: {
retainKeyOrder: false
},
_conditions: {
display: true
},
_fields: undefined,
_update: undefined,
_path: undefined,
_distinct: undefined,
_collection: NodeCollection {
collection: NativeCollection {
collection: [Object],
opts: [Object],
name: 'challenges',
collectionName: 'challenges',
conn: [Object],
queue: [],
buffer: false,
emitter: [Object] },
collectionName: 'challenges'},
_traceFunction: undefined,
_castError: null,
_count: [Function],
_execUpdate: [Function],
_find: [Function],
_findOne: [Function],
_findOneAndRemove: [Function],
_findOneAndUpdate: [Function],
_replaceOne: [Function],
_updateMany: [Function],
_updateOne: [Function]
}
